@model MvcDnevnik.Models.Complaints

@{
    ViewData["Title"] = "Create";


    // Assuming this is the student ID for the grade
}

<h1>Create</h1>

<h4>Grade</h4>

<h1>@ViewData["SubjectID"] / @ViewData["StudentID"]</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Complaint" asp-route-Sub="@ViewData["SubjectID"]" asp-route-Stu="@ViewData["StudentID"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control">
                    <option value="">Select Type</option>
                    @foreach (var type in Enum.GetValues(typeof(MvcDnevnik.Models.ComplaintStatus)))
                    {
                        <option value="@type">@type</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="ComplaintText" class="control-label"></label>
                <input asp-for="ComplaintText" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}